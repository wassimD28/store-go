import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/client/providers/theme.provider";
import { Toaster } from "react-hot-toast";
import NavBar from "@/client/components/navBar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              try {
                const stored = localStorage.getItem('theme-storage');
                if (stored) {
                  const { state } = JSON.parse(stored);
                  if (state.darkMode) {
                    document.documentElement.classList.add('dark');
                  }
                } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                  document.documentElement.classList.add('dark');
                }
              } catch (e) {}
            `,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider>
          <NavBar/>
          {children}
          <Toaster
            toastOptions={{
              className: `!bg-background !text-foreground border border-border`,
              style: {
                background: `hsl(var(--background))`,
                color: `hsl(var(--foreground))`,
                borderColor: `hsl(var(--border))`,
              },
              // Ensure proper animation and transition
              duration: 4000,
              position: "bottom-right",
            }}
          />
        </ThemeProvider>
      </body>
    </html>
  );
}
