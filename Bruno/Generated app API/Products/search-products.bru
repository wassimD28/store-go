meta {
  name: search-products
  type: http
  seq: 3
}

get {
  url: {{PROD_BASE_URL}}/api/mobile-app/products/search?query=smartphone
  body: none
  auth: bearer
}

auth:bearer {
  token: {{ACCESS_TOKEN}}
}

script:pre-request {
  // Get the access token from environment variables
  const accessToken = bru.getEnvVar("ACCESS_TOKEN");
  
  if (accessToken) {
    // Set the access token in the request's auth header
    req.auth = {
      type: "bearer",
      bearer: accessToken
    };
    console.log("✅ Access token applied to request");
  } else {
    console.warn("⚠️ No access token found in environment variables");
  }
}

docs {
  # Search Products Endpoint
  
  This endpoint allows searching for products in a store's inventory based on various criteria. It's designed to power search functionality in mobile e-commerce applications, helping users quickly find specific products.
  
  ## Authentication Requirements
  
  - This endpoint requires authentication using a JWT bearer token
  - The token must be obtained from the sign-in endpoint
  - The user must be associated with the store
  
  ## Request Parameters
  
  | Parameter | Type   | Required | Description                        |
  |-----------|--------|----------|------------------------------------|
  | query     | string | Yes      | Search term to match against product names and descriptions |
  | category  | string | No       | Optional UUID to filter by category |
  | minPrice  | number | No       | Minimum price filter               |
  | maxPrice  | number | No       | Maximum price filter               |
  | sort      | string | No       | Sort order: "price_asc", "price_desc", "newest", "popularity" |
  | limit     | number | No       | Number of results to return (default: 20) |
  | page      | number | No       | Page number for pagination (default: 1) |
  
  ## Example Requests
  
  - Basic search: `/api/mobile-app/products/search?query=smartphone`
  - Advanced search: `/api/mobile-app/products/search?query=smartphone&category=846d33b9-xxxx&minPrice=300&maxPrice=1000&sort=price_asc&limit=10&page=1`
  
  ## Search Implementation
  
  - Search is performed across product names and descriptions
  - Fuzzy matching is applied to handle slight spelling variations
  - Results are sorted by relevance unless a specific sort order is requested
  - The search is limited to products in the authenticated user's store
  
  ## Response
  
  ### Success (200 OK)
  ```json
  {
    "status": "success",
    "data": {
      "products": [
        {
          "id": "946d33b9-xxxx-xxxx-xxxx-e14570xxxxxx",
          "name": "Smartphone X",
          "description": "Latest smartphone with advanced features",
          "price": 799.99,
          "image_urls": ["https://example.com/images/smartphone-x.jpg"],
          "categoryId": "846d33b9-xxxx-xxxx-xxxx-e14570xxxxxx",
          "category": {
            "name": "Electronics"
          }
        },
        {
          "id": "b46d33b9-xxxx-xxxx-xxxx-e14570xxxxxx",
          "name": "Budget Smartphone Y",
          "description": "Affordable smartphone with great features",
          "price": 349.99,
          "image_urls": ["https://example.com/images/smartphone-y.jpg"],
          "categoryId": "846d33b9-xxxx-xxxx-xxxx-e14570xxxxxx",
          "category": {
            "name": "Electronics"
          }
        }
      ],
      "pagination": {
        "total": 12,
        "page": 1,
        "limit": 20,
        "pages": 1
      }
    }
  }
  ```
  
  ### Empty Results (200 OK)
  ```json
  {
    "status": "success",
    "data": {
      "products": [],
      "pagination": {
        "total": 0,
        "page": 1,
        "limit": 20,
        "pages": 0
      }
    }
  }
  ```
  
  ### Error Responses
  - 400 Bad Request: Invalid parameters
    ```json
    {
      "status": "error",
      "message": "Invalid search parameters"
    }
    ```
  - 401 Unauthorized: Missing or invalid authentication token
    ```json
    {
      "status": "error",
      "message": "Authentication required"
    }
    ```
  - 500 Internal Server Error: Server side error
    ```json
    {
      "status": "error",
      "message": "Failed to search products"
    }
    ```
  
  ## Performance Considerations
  
  - Search is optimized with database indexes on product names and descriptions
  - Results are paginated to prevent excessive data transfer
  - Category and price filters utilize database query optimizations
  - Response includes only necessary fields to minimize payload size
  
  ## Related Endpoints
  - GET `/api/mobile-app/products` - Get all products
  - GET `/api/mobile-app/products/:id` - Get a specific product
  - GET `/api/mobile-app/products/filter` - Advanced product filtering
}
