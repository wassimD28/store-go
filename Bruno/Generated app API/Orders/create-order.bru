meta {
  name: create-order
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/api/mobile-app/orders
  body: json
  auth: bearer
}

auth:bearer {
  token: {{ACCESS_TOKEN}}
}

body:json {
  {
    "shippingAddress": {
      "street": "123 Main Street",
      "city": "Boston",
      "state": "MA",
      "postalCode": "02101",
      "country": "USA",
      "phone": "+1-555-0123"
    },
    "billingAddress": {
      "street": "123 Main Street",
      "city": "Boston",
      "state": "MA",
      "postalCode": "02101",
      "country": "USA",
      "phone": "+1-555-0123"
    },
    "paymentMethod": "credit_card",
    "notes": "Please deliver to front door"
  }
}

script:pre-request {
  // Get the access token from environment variables
  const accessToken = bru.getEnvVar("ACCESS_TOKEN");
  
  if (accessToken) {
    req.auth = {
      type: "bearer",
      bearer: accessToken
    };
    console.log("✅ Access token applied to request");
  } else {
    console.warn("⚠️ No access token found in environment variables");
  }
}

script:post-response {
  if (res.status === 200) {
    const data = res.body.data;
    bru.setEnvVar("ORDER_ID", data.orderId);
    bru.setEnvVar("ORDER_NUMBER", data.orderNumber);
    console.log("✅ Order created successfully:", data.orderNumber);
  } else {
    console.error("❌ Order creation failed:", res.body);
  }
}

docs {
  # Create Order from Cart
  
  This endpoint creates a new order from the user's current cart items.
  
  ## Prerequisites
  - User must be authenticated
  - User must have items in their cart
    ## Request Body
  
  ```json
  {
    "shippingAddress": {
      "street": "123 Main Street",
      "city": "Boston",
      "state": "MA",
      "postalCode": "02101",
      "country": "USA",
      "phone": "+1-555-0123"
    },
    "billingAddress": {
      "street": "123 Main Street", 
      "city": "Boston",
      "state": "MA",
      "postalCode": "02101",
      "country": "USA",
      "phone": "+1-555-0123"
    },
    "paymentMethod": "credit_card",
    "notes": "Special delivery instructions"
  }
  ```
  
  ## Expected Response
  
  ```json
  {
    "status": "success",
    "message": "Order created successfully",
    "data": {
      "orderId": "uuid",
      "orderNumber": "ORD-12345678-ABCD",
      "totalAmount": 125.99,
      "status": "pending",
      "paymentStatus": "pending"
    }
  }
  ```
}
