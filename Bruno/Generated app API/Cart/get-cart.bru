meta {
  name: get-cart
  type: http
  seq: 1
}

get {
  url: {{BASE_URL}}/api/mobile-app/cart
  body: none
  auth: bearer
}

auth:bearer {
  token: {{ACCESS_TOKEN}}
}

script:pre-request {
  // Get the access token from environment variables
  const accessToken = bru.getEnvVar("ACCESS_TOKEN");
  
  if (accessToken) {
    // Set the access token in the request's auth header
    req.auth = {
      type: "bearer",
      bearer: accessToken
    };
    console.log("✅ Access token applied to request");
  } else {
    console.warn("⚠️ No access token found in environment variables");
  }
}

docs {
  # Get Cart Endpoint
  
  This endpoint retrieves the current user's shopping cart with all items and calculated totals.
  
  ## Response Format
  
  ```json
  {
    "status": "success",
    "data": {
      "cartId": "7c55ce04-2ad6-43e2-8bd5-a67786b38d7f",
      "items": [
        {
          "id": "cart-item-uuid",
          "cartId": "cart-uuid", 
          "productId": "product-uuid",
          "quantity": 2,
          "variants": {
            "color": "red",
            "size": "large"
          },
          "addedAt": "2023-05-15T10:30:00Z",
          "updatedAt": "2023-05-15T11:45:00Z",
          "product": {
            "id": "product-uuid",
            "name": "Smartphone X",
            "price": 799.99,
            "imageUrls": ["https://example.com/images/smartphone-x.jpg"],
            "stockQuantity": 50
          }
        }
      ],
      "summary": {
        "totalItems": 2,
        "subtotal": 1599.98,
        "tax": 159.99,
        "shippingCost": 0,
        "totalAmount": 1759.97
      }
    }
  }
  ```
  
  ## Empty Cart Response
  
  For empty carts, the response will be:
  
  ```json
  {
    "status": "success", 
    "data": {
      "cartId": "7c55ce04-2ad6-43e2-8bd5-a67786b38d7f",
      "items": [],
      "summary": {
        "totalItems": 0,
        "subtotal": 0,
        "tax": 0,
        "shippingCost": 15,
        "totalAmount": 15
      }
    }
  }
  ```
  
  ## Summary Calculations
  
  | Field | Description |
  |-------|-------------|
  | totalItems | Total quantity of all items in cart |
  | subtotal | Sum of (item price × quantity) for all items |
  | tax | 10% of subtotal |
  | shippingCost | $15 if subtotal < $50, $0 if subtotal >= $50 |
  | totalAmount | subtotal + tax + shippingCost |
  
  ## Error Responses
  
  | Status Code | Description | Response Body |
  |-------------|-------------|---------------|
  | 401 | Unauthorized | `{ "status": "error", "message": "Unauthorized: Missing or invalid authorization header" }` |
  | 403 | Forbidden | `{ "status": "error", "message": "Unauthorized: User does not have a store associated" }` |
  | 500 | Server error | `{ "status": "error", "message": "Failed to fetch cart" }` |
  
  ## Implementation Notes
  
  - The endpoint calculates cart summary statistics including:
    - Total number of items
    - Subtotal (sum of item prices × quantities)
    - Estimated tax (calculated based on subtotal)
    - Shipping cost (may vary based on order size)
    - Total amount (subtotal + tax + shipping)
  - Products with multiple quantities are counted individually in the total items count
  - Cart items are ordered by most recently updated first
  - Empty carts return an empty items array and zeroed summary values
  
  ## Related Endpoints
  
  - `POST /api/mobile-app/products/cart/:productId` - Add an item to cart
  - `PUT /api/mobile-app/cart/:cartItemId` - Update cart item quantity
  - `DELETE /api/mobile-app/cart/:cartItemId` - Remove item from cart
  - `DELETE /api/mobile-app/cart` - Clear entire cart
  - `POST /api/mobile-app/checkout` - Proceed to checkout
}
