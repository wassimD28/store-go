meta {
  name: get-cart-item-by-id
  type: http
  seq: 4
}

get {
  url: {{BASE_URL}}/api/mobile-app/cart/items/{{CART_ITEM_ID}}
  body: none
  auth: bearer
}
auth:bearer {
  token: {{ACCESS_TOKEN}}
}
vars:pre-request {
  CART_ITEM_ID: 
}

script:pre-request {
  // Get the access token from environment variables
  const accessToken = bru.getEnvVar("ACCESS_TOKEN");
  
  if (accessToken) {
    // Set the access token in the request's auth header
    req.auth = {
      type: "bearer",
      bearer: accessToken
    };
    console.log("✅ Access token applied to request");
  } else {
    console.warn("⚠️ No access token found in environment variables");
  }
}

docs {
  # Get Cart Item by ID Endpoint
  
  This endpoint retrieves a specific cart item by its ID, including the associated product details. This is useful for displaying detailed information about a specific item in the cart.
  
  ## Authentication Requirements
  
  - This endpoint requires authentication using a JWT bearer token
  - The token must be obtained from the sign-in endpoint
  - Users can only access their own cart items
  
  ## Request Parameters
  
  | Parameter | Location | Required | Description |
  |-----------|----------|----------|-------------|
  | cartId    | Path     | Yes      | UUID of the cart item to retrieve |
  
  ## Response Format
  
  The endpoint returns a JSON object with the following structure:
  
  ```json
  {
    "status": "success",
    "data": {
      "id": "cart-item-uuid",
      "storeId": "store-uuid",
      "appUserId": "user-uuid",
      "product_id": "product-uuid",
      "quantity": 2,
      "variants": {
        "color": "black",
        "size": "medium"
      },
      "added_at": "2023-05-15T10:30:00Z",
      "updated_at": "2023-05-15T10:30:00Z",
      "product": {
        "id": "product-uuid",
        "name": "Smartphone X",
        "description": "Latest smartphone with advanced features",
        "price": 799.99,
        "image_urls": ["https://example.com/images/smartphone-x.jpg"],
        "stock_quantity": 50,
        "status": "active",
        "created_at": "2023-04-10T08:15:00Z",
        "updated_at": "2023-04-20T14:22:00Z"
      }
    }
  }
  ```
  
  ## Error Responses
  
  | Status Code | Description | Response Body |
  |-------------|-------------|---------------|
  | 400 | Invalid cart item ID | `{ "status": "error", "message": "Invalid cart ID" }` |
  | 401 | Unauthorized | `{ "status": "error", "message": "Unauthorized" }` |
  | 403 | Not the owner | `{ "status": "error", "message": "You don't have permission to access this cart item" }` |
  | 404 | Cart item not found | `{ "status": "error", "message": "Cart item not found" }` |
  | 500 | Server error | `{ "status": "error", "message": "Failed to fetch cart item" }` |
  
  ## Implementation Notes
  
  - The endpoint performs security checks to ensure users can only access their own cart items
  - The response includes detailed product information joined from the products table
  - This endpoint is optimized for quick access to a single cart item with product details
  
  ## Related Endpoints
  
  - `GET /api/mobile-app/cart` - Get all items in the user's cart
  - `POST /api/mobile-app/products/cart/:productId` - Add an item to cart
  - `PUT /api/mobile-app/cart/:cartItemId` - Update cart item quantity
  - `DELETE /api/mobile-app/cart/:cartItemId` - Remove item from cart
}
